// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: report.proto

package objdiff

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Report struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuzzyMatchPercent       float32       `protobuf:"fixed32,1,opt,name=fuzzy_match_percent,json=fuzzyMatchPercent,proto3" json:"fuzzy_match_percent,omitempty"`
	TotalCode               uint64        `protobuf:"varint,2,opt,name=total_code,json=totalCode,proto3" json:"total_code,omitempty"`
	MatchedCode             uint64        `protobuf:"varint,3,opt,name=matched_code,json=matchedCode,proto3" json:"matched_code,omitempty"`
	MatchedCodePercent      float32       `protobuf:"fixed32,4,opt,name=matched_code_percent,json=matchedCodePercent,proto3" json:"matched_code_percent,omitempty"`
	TotalData               uint64        `protobuf:"varint,5,opt,name=total_data,json=totalData,proto3" json:"total_data,omitempty"`
	MatchedData             uint64        `protobuf:"varint,6,opt,name=matched_data,json=matchedData,proto3" json:"matched_data,omitempty"`
	MatchedDataPercent      float32       `protobuf:"fixed32,7,opt,name=matched_data_percent,json=matchedDataPercent,proto3" json:"matched_data_percent,omitempty"`
	TotalFunctions          uint32        `protobuf:"varint,8,opt,name=total_functions,json=totalFunctions,proto3" json:"total_functions,omitempty"`
	MatchedFunctions        uint32        `protobuf:"varint,9,opt,name=matched_functions,json=matchedFunctions,proto3" json:"matched_functions,omitempty"`
	MatchedFunctionsPercent float32       `protobuf:"fixed32,10,opt,name=matched_functions_percent,json=matchedFunctionsPercent,proto3" json:"matched_functions_percent,omitempty"`
	Units                   []*ReportUnit `protobuf:"bytes,11,rep,name=units,proto3" json:"units,omitempty"`
}

func (x *Report) Reset() {
	*x = Report{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{0}
}

func (x *Report) GetFuzzyMatchPercent() float32 {
	if x != nil {
		return x.FuzzyMatchPercent
	}
	return 0
}

func (x *Report) GetTotalCode() uint64 {
	if x != nil {
		return x.TotalCode
	}
	return 0
}

func (x *Report) GetMatchedCode() uint64 {
	if x != nil {
		return x.MatchedCode
	}
	return 0
}

func (x *Report) GetMatchedCodePercent() float32 {
	if x != nil {
		return x.MatchedCodePercent
	}
	return 0
}

func (x *Report) GetTotalData() uint64 {
	if x != nil {
		return x.TotalData
	}
	return 0
}

func (x *Report) GetMatchedData() uint64 {
	if x != nil {
		return x.MatchedData
	}
	return 0
}

func (x *Report) GetMatchedDataPercent() float32 {
	if x != nil {
		return x.MatchedDataPercent
	}
	return 0
}

func (x *Report) GetTotalFunctions() uint32 {
	if x != nil {
		return x.TotalFunctions
	}
	return 0
}

func (x *Report) GetMatchedFunctions() uint32 {
	if x != nil {
		return x.MatchedFunctions
	}
	return 0
}

func (x *Report) GetMatchedFunctionsPercent() float32 {
	if x != nil {
		return x.MatchedFunctionsPercent
	}
	return 0
}

func (x *Report) GetUnits() []*ReportUnit {
	if x != nil {
		return x.Units
	}
	return nil
}

type ReportUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FuzzyMatchPercent float32       `protobuf:"fixed32,2,opt,name=fuzzy_match_percent,json=fuzzyMatchPercent,proto3" json:"fuzzy_match_percent,omitempty"`
	TotalCode         uint64        `protobuf:"varint,3,opt,name=total_code,json=totalCode,proto3" json:"total_code,omitempty"`
	MatchedCode       uint64        `protobuf:"varint,4,opt,name=matched_code,json=matchedCode,proto3" json:"matched_code,omitempty"`
	TotalData         uint64        `protobuf:"varint,5,opt,name=total_data,json=totalData,proto3" json:"total_data,omitempty"`
	MatchedData       uint64        `protobuf:"varint,6,opt,name=matched_data,json=matchedData,proto3" json:"matched_data,omitempty"`
	TotalFunctions    uint32        `protobuf:"varint,7,opt,name=total_functions,json=totalFunctions,proto3" json:"total_functions,omitempty"`
	MatchedFunctions  uint32        `protobuf:"varint,8,opt,name=matched_functions,json=matchedFunctions,proto3" json:"matched_functions,omitempty"`
	Complete          *bool         `protobuf:"varint,9,opt,name=complete,proto3,oneof" json:"complete,omitempty"`
	ModuleName        *string       `protobuf:"bytes,10,opt,name=module_name,json=moduleName,proto3,oneof" json:"module_name,omitempty"`
	ModuleId          *uint32       `protobuf:"varint,11,opt,name=module_id,json=moduleId,proto3,oneof" json:"module_id,omitempty"`
	Sections          []*ReportItem `protobuf:"bytes,12,rep,name=sections,proto3" json:"sections,omitempty"`
	Functions         []*ReportItem `protobuf:"bytes,13,rep,name=functions,proto3" json:"functions,omitempty"`
}

func (x *ReportUnit) Reset() {
	*x = ReportUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportUnit) ProtoMessage() {}

func (x *ReportUnit) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportUnit.ProtoReflect.Descriptor instead.
func (*ReportUnit) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{1}
}

func (x *ReportUnit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReportUnit) GetFuzzyMatchPercent() float32 {
	if x != nil {
		return x.FuzzyMatchPercent
	}
	return 0
}

func (x *ReportUnit) GetTotalCode() uint64 {
	if x != nil {
		return x.TotalCode
	}
	return 0
}

func (x *ReportUnit) GetMatchedCode() uint64 {
	if x != nil {
		return x.MatchedCode
	}
	return 0
}

func (x *ReportUnit) GetTotalData() uint64 {
	if x != nil {
		return x.TotalData
	}
	return 0
}

func (x *ReportUnit) GetMatchedData() uint64 {
	if x != nil {
		return x.MatchedData
	}
	return 0
}

func (x *ReportUnit) GetTotalFunctions() uint32 {
	if x != nil {
		return x.TotalFunctions
	}
	return 0
}

func (x *ReportUnit) GetMatchedFunctions() uint32 {
	if x != nil {
		return x.MatchedFunctions
	}
	return 0
}

func (x *ReportUnit) GetComplete() bool {
	if x != nil && x.Complete != nil {
		return *x.Complete
	}
	return false
}

func (x *ReportUnit) GetModuleName() string {
	if x != nil && x.ModuleName != nil {
		return *x.ModuleName
	}
	return ""
}

func (x *ReportUnit) GetModuleId() uint32 {
	if x != nil && x.ModuleId != nil {
		return *x.ModuleId
	}
	return 0
}

func (x *ReportUnit) GetSections() []*ReportItem {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *ReportUnit) GetFunctions() []*ReportItem {
	if x != nil {
		return x.Functions
	}
	return nil
}

type ReportItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size              uint64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	FuzzyMatchPercent float32 `protobuf:"fixed32,3,opt,name=fuzzy_match_percent,json=fuzzyMatchPercent,proto3" json:"fuzzy_match_percent,omitempty"`
	DemangledName     *string `protobuf:"bytes,4,opt,name=demangled_name,json=demangledName,proto3,oneof" json:"demangled_name,omitempty"`
	Address           *uint64 `protobuf:"varint,5,opt,name=address,proto3,oneof" json:"address,omitempty"`
}

func (x *ReportItem) Reset() {
	*x = ReportItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportItem) ProtoMessage() {}

func (x *ReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportItem.ProtoReflect.Descriptor instead.
func (*ReportItem) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{2}
}

func (x *ReportItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReportItem) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReportItem) GetFuzzyMatchPercent() float32 {
	if x != nil {
		return x.FuzzyMatchPercent
	}
	return 0
}

func (x *ReportItem) GetDemangledName() string {
	if x != nil && x.DemangledName != nil {
		return *x.DemangledName
	}
	return ""
}

func (x *ReportItem) GetAddress() uint64 {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return 0
}

// Used as stdin for the changes command
type ChangesInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *Report `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To   *Report `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *ChangesInput) Reset() {
	*x = ChangesInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangesInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangesInput) ProtoMessage() {}

func (x *ChangesInput) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangesInput.ProtoReflect.Descriptor instead.
func (*ChangesInput) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{3}
}

func (x *ChangesInput) GetFrom() *Report {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ChangesInput) GetTo() *Report {
	if x != nil {
		return x.To
	}
	return nil
}

type Changes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  *ChangeInfo   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To    *ChangeInfo   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Units []*ChangeUnit `protobuf:"bytes,3,rep,name=units,proto3" json:"units,omitempty"`
}

func (x *Changes) Reset() {
	*x = Changes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Changes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Changes) ProtoMessage() {}

func (x *Changes) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Changes.ProtoReflect.Descriptor instead.
func (*Changes) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{4}
}

func (x *Changes) GetFrom() *ChangeInfo {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Changes) GetTo() *ChangeInfo {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Changes) GetUnits() []*ChangeUnit {
	if x != nil {
		return x.Units
	}
	return nil
}

type ChangeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuzzyMatchPercent       float32 `protobuf:"fixed32,1,opt,name=fuzzy_match_percent,json=fuzzyMatchPercent,proto3" json:"fuzzy_match_percent,omitempty"`
	TotalCode               uint64  `protobuf:"varint,2,opt,name=total_code,json=totalCode,proto3" json:"total_code,omitempty"`
	MatchedCode             uint64  `protobuf:"varint,3,opt,name=matched_code,json=matchedCode,proto3" json:"matched_code,omitempty"`
	MatchedCodePercent      float32 `protobuf:"fixed32,4,opt,name=matched_code_percent,json=matchedCodePercent,proto3" json:"matched_code_percent,omitempty"`
	TotalData               uint64  `protobuf:"varint,5,opt,name=total_data,json=totalData,proto3" json:"total_data,omitempty"`
	MatchedData             uint64  `protobuf:"varint,6,opt,name=matched_data,json=matchedData,proto3" json:"matched_data,omitempty"`
	MatchedDataPercent      float32 `protobuf:"fixed32,7,opt,name=matched_data_percent,json=matchedDataPercent,proto3" json:"matched_data_percent,omitempty"`
	TotalFunctions          uint32  `protobuf:"varint,8,opt,name=total_functions,json=totalFunctions,proto3" json:"total_functions,omitempty"`
	MatchedFunctions        uint32  `protobuf:"varint,9,opt,name=matched_functions,json=matchedFunctions,proto3" json:"matched_functions,omitempty"`
	MatchedFunctionsPercent float32 `protobuf:"fixed32,10,opt,name=matched_functions_percent,json=matchedFunctionsPercent,proto3" json:"matched_functions_percent,omitempty"`
}

func (x *ChangeInfo) Reset() {
	*x = ChangeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeInfo) ProtoMessage() {}

func (x *ChangeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeInfo.ProtoReflect.Descriptor instead.
func (*ChangeInfo) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{5}
}

func (x *ChangeInfo) GetFuzzyMatchPercent() float32 {
	if x != nil {
		return x.FuzzyMatchPercent
	}
	return 0
}

func (x *ChangeInfo) GetTotalCode() uint64 {
	if x != nil {
		return x.TotalCode
	}
	return 0
}

func (x *ChangeInfo) GetMatchedCode() uint64 {
	if x != nil {
		return x.MatchedCode
	}
	return 0
}

func (x *ChangeInfo) GetMatchedCodePercent() float32 {
	if x != nil {
		return x.MatchedCodePercent
	}
	return 0
}

func (x *ChangeInfo) GetTotalData() uint64 {
	if x != nil {
		return x.TotalData
	}
	return 0
}

func (x *ChangeInfo) GetMatchedData() uint64 {
	if x != nil {
		return x.MatchedData
	}
	return 0
}

func (x *ChangeInfo) GetMatchedDataPercent() float32 {
	if x != nil {
		return x.MatchedDataPercent
	}
	return 0
}

func (x *ChangeInfo) GetTotalFunctions() uint32 {
	if x != nil {
		return x.TotalFunctions
	}
	return 0
}

func (x *ChangeInfo) GetMatchedFunctions() uint32 {
	if x != nil {
		return x.MatchedFunctions
	}
	return 0
}

func (x *ChangeInfo) GetMatchedFunctionsPercent() float32 {
	if x != nil {
		return x.MatchedFunctionsPercent
	}
	return 0
}

type ChangeUnit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	From      *ChangeInfo   `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To        *ChangeInfo   `protobuf:"bytes,3,opt,name=to,proto3,oneof" json:"to,omitempty"`
	Sections  []*ChangeItem `protobuf:"bytes,4,rep,name=sections,proto3" json:"sections,omitempty"`
	Functions []*ChangeItem `protobuf:"bytes,5,rep,name=functions,proto3" json:"functions,omitempty"`
}

func (x *ChangeUnit) Reset() {
	*x = ChangeUnit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUnit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUnit) ProtoMessage() {}

func (x *ChangeUnit) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUnit.ProtoReflect.Descriptor instead.
func (*ChangeUnit) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{6}
}

func (x *ChangeUnit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChangeUnit) GetFrom() *ChangeInfo {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ChangeUnit) GetTo() *ChangeInfo {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ChangeUnit) GetSections() []*ChangeItem {
	if x != nil {
		return x.Sections
	}
	return nil
}

func (x *ChangeUnit) GetFunctions() []*ChangeItem {
	if x != nil {
		return x.Functions
	}
	return nil
}

type ChangeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	From *ChangeItemInfo `protobuf:"bytes,2,opt,name=from,proto3,oneof" json:"from,omitempty"`
	To   *ChangeItemInfo `protobuf:"bytes,3,opt,name=to,proto3,oneof" json:"to,omitempty"`
}

func (x *ChangeItem) Reset() {
	*x = ChangeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeItem) ProtoMessage() {}

func (x *ChangeItem) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeItem.ProtoReflect.Descriptor instead.
func (*ChangeItem) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChangeItem) GetFrom() *ChangeItemInfo {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *ChangeItem) GetTo() *ChangeItemInfo {
	if x != nil {
		return x.To
	}
	return nil
}

type ChangeItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuzzyMatchPercent float32 `protobuf:"fixed32,1,opt,name=fuzzy_match_percent,json=fuzzyMatchPercent,proto3" json:"fuzzy_match_percent,omitempty"`
	Size              uint64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ChangeItemInfo) Reset() {
	*x = ChangeItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_report_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeItemInfo) ProtoMessage() {}

func (x *ChangeItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_report_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeItemInfo.ProtoReflect.Descriptor instead.
func (*ChangeItemInfo) Descriptor() ([]byte, []int) {
	return file_report_proto_rawDescGZIP(), []int{8}
}

func (x *ChangeItemInfo) GetFuzzyMatchPercent() float32 {
	if x != nil {
		return x.FuzzyMatchPercent
	}
	return 0
}

func (x *ChangeItemInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_report_proto protoreflect.FileDescriptor

var file_report_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xe4,
	0x03, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x75, 0x7a,
	0x7a, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x14, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x05,
	0x75, 0x6e, 0x69, 0x74, 0x73, 0x22, 0xb0, 0x04, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x55, 0x6e, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x75, 0x7a, 0x7a,
	0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66,
	0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x2e, 0x0a, 0x13, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x66, 0x75,
	0x7a, 0x7a, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x2a, 0x0a, 0x0e, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x64, 0x65, 0x6d, 0x61, 0x6e,
	0x67, 0x6c, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x64,
	0x65, 0x6d, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x62, 0x0a, 0x0c, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66,
	0x66, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x97, 0x01,
	0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66,
	0x66, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x2a, 0x0a, 0x02, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x30, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74,
	0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x22, 0xb6, 0x03, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x11, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x43,
	0x6f, 0x64, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x14,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x5f,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x22, 0x88, 0x02, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62,
	0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x0a,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f,
	0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x62, 0x6a, 0x64, 0x69, 0x66, 0x66, 0x2e, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x0e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e,
	0x0a, 0x13, 0x66, 0x75, 0x7a, 0x7a, 0x79, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x66, 0x75, 0x7a,
	0x7a, 0x79, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_report_proto_rawDescOnce sync.Once
	file_report_proto_rawDescData = file_report_proto_rawDesc
)

func file_report_proto_rawDescGZIP() []byte {
	file_report_proto_rawDescOnce.Do(func() {
		file_report_proto_rawDescData = protoimpl.X.CompressGZIP(file_report_proto_rawDescData)
	})
	return file_report_proto_rawDescData
}

var file_report_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_report_proto_goTypes = []any{
	(*Report)(nil),         // 0: objdiff.report.Report
	(*ReportUnit)(nil),     // 1: objdiff.report.ReportUnit
	(*ReportItem)(nil),     // 2: objdiff.report.ReportItem
	(*ChangesInput)(nil),   // 3: objdiff.report.ChangesInput
	(*Changes)(nil),        // 4: objdiff.report.Changes
	(*ChangeInfo)(nil),     // 5: objdiff.report.ChangeInfo
	(*ChangeUnit)(nil),     // 6: objdiff.report.ChangeUnit
	(*ChangeItem)(nil),     // 7: objdiff.report.ChangeItem
	(*ChangeItemInfo)(nil), // 8: objdiff.report.ChangeItemInfo
}
var file_report_proto_depIdxs = []int32{
	1,  // 0: objdiff.report.Report.units:type_name -> objdiff.report.ReportUnit
	2,  // 1: objdiff.report.ReportUnit.sections:type_name -> objdiff.report.ReportItem
	2,  // 2: objdiff.report.ReportUnit.functions:type_name -> objdiff.report.ReportItem
	0,  // 3: objdiff.report.ChangesInput.from:type_name -> objdiff.report.Report
	0,  // 4: objdiff.report.ChangesInput.to:type_name -> objdiff.report.Report
	5,  // 5: objdiff.report.Changes.from:type_name -> objdiff.report.ChangeInfo
	5,  // 6: objdiff.report.Changes.to:type_name -> objdiff.report.ChangeInfo
	6,  // 7: objdiff.report.Changes.units:type_name -> objdiff.report.ChangeUnit
	5,  // 8: objdiff.report.ChangeUnit.from:type_name -> objdiff.report.ChangeInfo
	5,  // 9: objdiff.report.ChangeUnit.to:type_name -> objdiff.report.ChangeInfo
	7,  // 10: objdiff.report.ChangeUnit.sections:type_name -> objdiff.report.ChangeItem
	7,  // 11: objdiff.report.ChangeUnit.functions:type_name -> objdiff.report.ChangeItem
	8,  // 12: objdiff.report.ChangeItem.from:type_name -> objdiff.report.ChangeItemInfo
	8,  // 13: objdiff.report.ChangeItem.to:type_name -> objdiff.report.ChangeItemInfo
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_report_proto_init() }
func file_report_proto_init() {
	if File_report_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_report_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Report); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ReportUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ReportItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ChangesInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Changes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeUnit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_report_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_report_proto_msgTypes[1].OneofWrappers = []any{}
	file_report_proto_msgTypes[2].OneofWrappers = []any{}
	file_report_proto_msgTypes[6].OneofWrappers = []any{}
	file_report_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_report_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_report_proto_goTypes,
		DependencyIndexes: file_report_proto_depIdxs,
		MessageInfos:      file_report_proto_msgTypes,
	}.Build()
	File_report_proto = out.File
	file_report_proto_rawDesc = nil
	file_report_proto_goTypes = nil
	file_report_proto_depIdxs = nil
}
